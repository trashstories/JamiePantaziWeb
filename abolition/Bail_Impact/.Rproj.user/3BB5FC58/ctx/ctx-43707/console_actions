{
    "type": [
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        2
    ],
    "data": [
        "",
        "> ",
        "colors <- c(\"#7400CC\", \"#CC0AA4\", \"#0E0ACC\", \"#3ACC14\", ",
        "+ ",
        "            \"#CCAC14\", \"#0ACCC5\", \"#CC1F14\", \"#1471CC\", ",
        "+ ",
        "            \"#805713\", \"#4F008C\", \"#B785DD\")",
        "> ",
        "",
        "> ",
        "th_bail <- theme_light() + ",
        "+ ",
        "  theme(panel.grid.major = element_line(color = \"#FFD1F9\", ",
        "+ ",
        "                                        linewidth = .75, ",
        "+ ",
        "                                        linetype = \"longdash\"),",
        "+ ",
        "        panel.grid.minor = element_line(color = \"#FFD1F9\", ",
        "+ ",
        "                                          linewidth = .75, ",
        "+ ",
        "                                          linetype = \"dotted\"),",
        "+ ",
        "        panel.border = element_blank(),",
        "+ ",
        "        axis.ticks = element_blank(),",
        "+ ",
        "        axis.text = element_text(color = \"#310873\", ",
        "+ ",
        "                                 family = \"Cambria\"),",
        "+ ",
        "        axis.title = element_text(color = \"#310873\", ",
        "+ ",
        "                                  family = \"Changa\"),",
        "+ ",
        "        plot.title = element_text(color = \"#310873\", ",
        "+ ",
        "                                  size = 14, ",
        "+ ",
        "                                  face = \"bold\", ",
        "+ ",
        "                                  family = \"Changa\"),",
        "+ ",
        "        plot.subtitle = element_text(color = \"#310873\", ",
        "+ ",
        "                                  size = 13, ",
        "+ ",
        "                                  family = \"Changa\"),",
        "+ ",
        "        legend.text = element_text(color = \"#310873\", ",
        "+ ",
        "                                   family = \"Changa\"))",
        "> ",
        "",
        "> ",
        "# Chunk 2: data",
        "> ",
        "",
        "> ",
        "# setwd(\"data/harris/\")",
        "> ",
        "# files <- list.files(pattern=\"*.csv\")",
        "> ",
        "# harris_raw <- do.call(rbind, lapply(files, fread))",
        "> ",
        "",
        "> ",
        "# saveRDS(harris_raw, \"harris_raw.RDS\")",
        "> ",
        "",
        "> ",
        "# harris_raw <- readRDS(\"harris_raw.RDS\")",
        "> ",
        "# ",
        "> ",
        "# harris_ <- harris_raw %>% ",
        "> ",
        "#   mutate(id = unique_identifier(harris_raw, fields = c(\"fda\", \"def_nam\", \"def_dob\")))",
        "> ",
        "# ",
        "> ",
        "# uniq <- harris_ %>% ",
        "> ",
        "#   group_by(id) %>% ",
        "> ",
        "#   summarise(n = n(),",
        "> ",
        "#             bam_sum = sum(bam, na.rm = TRUE),",
        "> ",
        "#             types = paste0(curr_l_d, collapse = \", \"),",
        "> ",
        "#             disp_all = paste0(disposition, collapse = \", \")) ",
        "> ",
        "# ",
        "> ",
        "# harris_m <- harris %>%",
        "> ",
        "#   inner_join(uniq, by = \"id\") %>%",
        "> ",
        "#   distinct(id, .keep_all = TRUE) %>% ",
        "> ",
        "#   filter(!str_detect(types, \"F\")) %>%",
        "> ",
        "#   mutate(plea = ifelse(str_detect(disp_all, \"PLEA\"), 1, 0),",
        "> ",
        "#          date = ymd(fda),",
        "> ",
        "#          m_y = format(date, \"%Y-%m\"),",
        "> ",
        "#          year = format(date, \"%Y\"),",
        "> ",
        "#          casetime = as.Date(dispdt) - date,",
        "> ",
        "#          after = ifelse(date > as.Date(\"2019-11-01\"), 1, 0),",
        "> ",
        "#          male = ifelse(def_sex != \"M\", 0, 1),",
        "> ",
        "#          race = case_when(def_rac == \"W\" ~ \"White\",",
        "> ",
        "#                           def_rac == \"B\" ~ \"Black\",",
        "> ",
        "#                           TRUE ~ \"Other\"),",
        "> ",
        "#          race = factor(race, levels = c(\"White\", \"Black\", \"Other\")),",
        "> ",
        "#          age = interval(as.Date(def_dob), date),",
        "> ",
        "#          homeless = ifelse(str_detect(def_stnam, \"HOMELESS\"), 1, 0),",
        "> ",
        "#          disp = case_when(str_detect(disp_all, \"PLEA\") ~ \"Guilty Plea\",",
        "> ",
        "#                           !str_detect(disp_all, \"PLEA\") & ",
        "> ",
        "#                             str_detect(disp_all, \"CONVICTION\") ~ \"Conviction (No Plea)\",",
        "> ",
        "#                           !str_detect(disp_all, \"PLEA\") & ",
        "> ",
        "#                             !str_detect(disp_all, \"CONVICT\") & ",
        "> ",
        "#                             str_detect(disp_all, \"PROBATION\") ~ \"Probation (No Plea)\",",
        "> ",
        "#                           !str_detect(disp_all, \"PLEA\") & ",
        "> ",
        "#                             !str_detect(disp_all, \"CONVICT\") & ",
        "> ",
        "#                             !str_detect(disp_all, \"PROBATION\") & ",
        "> ",
        "#                             str_detect(disp_all, \"ACQUITTAL\") ~ \"Acquitted\",",
        "> ",
        "#                           !str_detect(disp_all, \"PLEA\") & ",
        "> ",
        "#                             !str_detect(disp_all, \"CONVICT\") & ",
        "> ",
        "#                             !str_detect(disp_all, \"PROBATION\") & ",
        "> ",
        "#                             str_detect(disp_all, \"NOT GUILTY\") ~ \"Acquitted\",",
        "> ",
        "#                           !str_detect(disp_all, \"PLEA\") & ",
        "> ",
        "#                             !str_detect(disp_all, \"CONVICT\") & ",
        "> ",
        "#                             str_detect(disp_all, \"DEFERRED\") ~ \"Deferred\",",
        "> ",
        "#                           !str_detect(disp_all, \"PLEA\") & ",
        "> ",
        "#                             !str_detect(disp_all, \"CONVICT\") & ",
        "> ",
        "#                             !str_detect(disp_all, \"PROBATION\") & ",
        "> ",
        "#                             !str_detect(disp_all, \"ACQUITTAL\") &",
        "> ",
        "#                             !str_detect(disp_all, \"NOT GUILTY\") &",
        "> ",
        "#                             str_detect(disp_all, \"DISM\") ~ \"Dismissed\",",
        "> ",
        "#                           !str_detect(disp_all, \"PLEA\") & ",
        "> ",
        "#                             !str_detect(disp_all, \"CONVICT\") & ",
        "> ",
        "#                             !str_detect(disp_all, \"PROBATION\") & ",
        "> ",
        "#                             !str_detect(disp_all, \"ACQUITTAL\") &",
        "> ",
        "#                             !str_detect(disp_all, \"NOT GUILTY\") &",
        "> ",
        "#                             str_detect(disp_all, \"NO BILL\") ~ \"Dismissed\",",
        "> ",
        "#                           !str_detect(disp_all, \"PLEA\") & ",
        "> ",
        "#                             !str_detect(disp_all, \"CONVICT\") & ",
        "> ",
        "#                             !str_detect(disp_all, \"PROBATION\") & ",
        "> ",
        "#                             !str_detect(disp_all, \"ACQUITTAL\") &",
        "> ",
        "#                             !str_detect(disp_all, \"NOT GUILTY\") &",
        "> ",
        "#                             str_detect(disp_all, \"CASE QUASHED\") ~ \"Dismissed\",",
        "> ",
        "#                           TRUE ~ \"Other\"),",
        "> ",
        "#          violent = case_when(str_detect(offcat, \"Sex\") ~ 1,",
        "> ",
        "#                              str_detect(offcat, \"Violence\") ~ 1,",
        "> ",
        "#                              str_detect(offcat, \"Assault\") ~ 1,",
        "> ",
        "#                              str_detect(offcat, \"Child\") ~ 1,",
        "> ",
        "#                              str_detect(offcat, \"Weapons\") ~ 1,",
        "> ",
        "#                              str_detect(offcat, \"Arson\") ~ 1,",
        "> ",
        "#                              str_detect(offcat, \"Kidnapping\") ~ 1,",
        "> ",
        "#                              TRUE ~ 0),",
        "> ",
        "#          bailcat = ifelse(!is.na(bam_notes), \"Bond Denied\", ",
        "> ",
        "#                           ifelse(bam_sum == 0, \"No bail\",",
        "> ",
        "#                           cut(bam_sum,",
        "> ",
        "#                               c(0,5000,50000,100000,",
        "> ",
        "#                                 250000,1000000)))),",
        "> ",
        "#          bailcat = case_when(bailcat == \"1\" ~ \"<=$5,000\",",
        "> ",
        "#                              bailcat == \"2\" ~ \"$5,000-$50,000\",",
        "> ",
        "#                              bailcat == \"3\" ~ \"$50,000-$100,000\",",
        "> ",
        "#                              bailcat == \"4\" ~ \"$100,000-$250,000\",",
        "> ",
        "#                              bailcat == \"5\" ~ \">$250,000\",",
        "> ",
        "#                              TRUE ~ bailcat),",
        "> ",
        "#          bailcat = factor(bailcat, levels = c(\"Bond Denied\",",
        "> ",
        "#                                               \"No bail\",",
        "> ",
        "#                                               \"<=$5,000\",",
        "> ",
        "#                                               \"$5,000-$50,000\",",
        "> ",
        "#                                               \"$50,000-$100,000\",",
        "> ",
        "#                                               \"$100,000-$250,000\",",
        "> ",
        "#                                               \">$250,000\")),",
        "> ",
        "#          dism_defer = ifelse(disp == \"Dismissed\" | disp == \"Deferred\",",
        "> ",
        "#                              TRUE, FALSE),",
        "> ",
        "#          drop = ifelse(bailcat == \"No bail\" & dism_defer == TRUE & casetime <= 3,",
        "> ",
        "#                        TRUE, FALSE)) %>%",
        "> ",
        "#   drop_na(plea, dispdt) %>% ",
        "> ",
        "#   select(id, date, m_y, year, dispdt, casetime, after, plea, ",
        "> ",
        "#          bam, bam_sum, bam_notes, bailcat, ",
        "> ",
        "#          n, types, offcat, violent, ",
        "> ",
        "#          race, def_dob, male, homeless, def_zip, ",
        "> ",
        "#          aty_coc_lit, disposition, disp_all, disp, dism_defer, drop",
        "> ",
        "#          #sentence, Judge, fine, original_sentence_location,",
        "> ",
        "#          #original_sentence_length, original_sentence_length_in_days,",
        "> ",
        "#          #Latitude, Longitude",
        "> ",
        "#          ) ",
        "> ",
        "# ",
        "> ",
        "# saveRDS(harris_m, \"harris_m.RDS\")",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# Chunk 3",
        "> ",
        "",
        "> ",
        "harris_m <- readRDS(\"harris_m.RDS\") ",
        "> ",
        "",
        "> ",
        "harris <- harris_m %>% ",
        "+ ",
        "  filter(drop == FALSE,",
        "+ ",
        "         bailcat != \"Bond Denied\")",
        "> ",
        "",
        "> ",
        "nobail <- harris %>% ",
        "+ ",
        "  filter(bailcat == \"No bail\") %>% ",
        "+ ",
        "  filter(dism_defer == FALSE,",
        "+ ",
        "         drop == FALSE,",
        "+ ",
        "         plea == 0) %>%",
        "+ ",
        "  select(date, bam, bam_sum, plea, types, offcat, ",
        "+ ",
        "         disp, disp_all, casetime, drop, dism_defer)",
        "> ",
        "",
        "> ",
        "year_ <- harris %>%",
        "+ ",
        "  drop_na(plea) %>% ",
        "+ ",
        "  group_by(year, plea) %>% ",
        "+ ",
        "  summarise(n = n()) ",
        "\u001B[38;5;254m`summarise()` has grouped output by 'year'. You can override using the `.groups` argument.\u001B[39m\n",
        "> ",
        "",
        "> ",
        "year_sum <- harris %>%",
        "+ ",
        "  drop_na(plea) %>% ",
        "+ ",
        "  group_by(year) %>% ",
        "+ ",
        "  summarise(total = n()) %>% ",
        "+ ",
        "  left_join(year_, by = \"year\", ",
        "+ ",
        "            relationship = \"many-to-many\") %>% ",
        "+ ",
        "  mutate(rate = n / total)",
        "> ",
        "",
        "> ",
        "month_ <- harris %>%",
        "+ ",
        "  drop_na(plea) %>% ",
        "+ ",
        "  group_by(m_y, plea) %>% ",
        "+ ",
        "  summarise(n = n()) ",
        "\u001B[38;5;254m`summarise()` has grouped output by 'm_y'. You can override using the `.groups` argument.\u001B[39m\n",
        "> ",
        "",
        "> ",
        "month_sum <- harris %>%",
        "+ ",
        "  drop_na(plea) %>% ",
        "+ ",
        "  group_by(m_y) %>% ",
        "+ ",
        "  summarise(total = n()) %>% ",
        "+ ",
        "  left_join(month_, by = \"m_y\", ",
        "+ ",
        "            relationship = \"many-to-many\") %>% ",
        "+ ",
        "  mutate(rate = n / total,",
        "+ ",
        "         m_y = as.Date(paste0(m_y, \"-01\")))",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# Chunk 4",
        "> ",
        "",
        "> ",
        "year_sum %>% ",
        "+ ",
        "  filter(plea == 1) %>% ",
        "+ ",
        "  ggplot(aes(year, rate)) +",
        "+ ",
        "  geom_point(size = 5, color = \"#7400CC\") +",
        "+ ",
        "  geom_vline(xintercept = \"2019-12\", linewidth = 1) +",
        "+ ",
        "  scale_color_manual(values = colors) +",
        "+ ",
        "  theme_light()",
        "> ",
        "",
        "> ",
        "month_sum %>% ",
        "+ ",
        "  filter(plea == 1) %>% ",
        "+ ",
        "  ggplot(aes(m_y, rate)) +",
        "+ ",
        "  geom_point(size = 2,",
        "+ ",
        "             color = \"#0E0ACC\") +",
        "+ ",
        "  geom_line(aes(group = factor(plea)),",
        "+ ",
        "            linewidth = 1,",
        "+ ",
        "            color = \"#0E0ACC\") +",
        "+ ",
        "  geom_vline(xintercept = c(as.Date(\"2019-12-01\"), as.Date(\"2017-2-01\")),",
        "+ ",
        "             linewidth = 1.25, ",
        "+ ",
        "             color = \"#CC0AA4\") +",
        "+ ",
        "  scale_x_date(breaks = date_breaks(width = \"1 year\"),",
        "+ ",
        "               labels = date_format(\"%Y\"),",
        "+ ",
        "               expand = expansion(mult = .01, add = .01)) +",
        "+ ",
        "  scale_y_continuous(labels = label_percent(),",
        "+ ",
        "                     limits = c(0,1),",
        "+ ",
        "                     expand = expansion(mult = .01, add = .01)) +",
        "+ ",
        "  scale_color_manual(values = colors) +",
        "+ ",
        "  labs(x = NULL,",
        "+ ",
        "       y = \"Rate of Guilty Pleas\",",
        "+ ",
        "       title = \"Harris County Guilty Pleas\",",
        "+ ",
        "       subtitle = \"Misdemeanors 2015-2022\") +",
        "+ ",
        "  th_bail ",
        "> ",
        "",
        "> ",
        "ggsave(\"harris.png\", width = 7, height = 7 / 1.618)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# Chunk 5: zips",
        "> ",
        "",
        "> ",
        "zip <- harris %>% ",
        "+ ",
        "  group_by(def_zip) %>% ",
        "+ ",
        "  summarise(n = n()) %>% ",
        "+ ",
        "  filter(def_zip != \"00000\",",
        "+ ",
        "         def_zip != \"0000 \",",
        "+ ",
        "         def_zip != \"     \",",
        "+ ",
        "         def_zip != \"\",",
        "+ ",
        "         def_zip != \"99999\") %>% ",
        "+ ",
        "  subset(nchar(trimws(def_zip)) == 5) %>% ",
        "+ ",
        "  mutate(zip_char = paste0('\"', def_zip, '\"'))",
        "> ",
        "",
        "> ",
        "write.csv(zip, \"harris_zips.csv\")",
        "> ",
        "",
        "> ",
        "zip %>% ",
        "+ ",
        "  filter(n > 50) %>% ",
        "+ ",
        "  ggplot(aes(n)) +",
        "+ ",
        "  geom_histogram(color = \"white\", ",
        "+ ",
        "                 fill = \"purple\", ",
        "+ ",
        "                 binwidth = 100) +",
        "+ ",
        "  th_bail",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# Chunk 6: years",
        "> ",
        "",
        "> ",
        "years <- harris %>% ",
        "+ ",
        "  filter(bailcat != \"No bail\",",
        "+ ",
        "         bailcat != \"Bond Denied\", ",
        "+ ",
        "         bam_sum > 2500) %>% ",
        "+ ",
        "  group_by(year) %>% ",
        "+ ",
        "  summarise(n = n()) %>% ",
        "+ ",
        "  mutate(m = mean(n))",
        "> ",
        "harris %>%",
        "+ ",
        "  ggplot(aes(plea)) +",
        "+ ",
        "  geom_density() +",
        "+ ",
        "  th_bail",
        "> ",
        "rates <- month_sum %>% ",
        "+ ",
        "  mutate(after = ifelse(m_y > as.Date(\"2017-2-01\"), 1, 0)) %>% ",
        "+ ",
        "  mutate(bigrate = rate * 100)",
        "> ",
        "rates %>% ",
        "+ ",
        "  ggplot(aes(rate)) +",
        "+ ",
        "  geom_density() +",
        "+ ",
        "  th_bail",
        "> ",
        "model <- lm(plea ~ bailcat * after, data = harris)",
        "> ",
        "tidy(model)",
        "\u001B[38;5;246m# A tibble: 12 × 5\u001B[39m\n   term                           estimate std.error statistic   p.value\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                             \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m (Intercept)                      0.707    0.006\u001B[4m2\u001B[24m\u001B[4m0\u001B[24m   114.    0   \u001B[38;5;246m \u001B[39m    \n\u001B[38;5;250m 2\u001B[39m bailcat<=$5,000                 -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m212\u001B[39m    0.006\u001B[4m2\u001B[24m\u001B[4m9\u001B[24m   -\u001B[31m33\u001B[39m\u001B[31m.\u001B[39m\u001B[31m8\u001B[39m   1.58\u001B[38;5;246me\u001B[39m\u001B[31m-249\u001B[39m\n",
        "\u001B[38;5;250m 3\u001B[39m bailcat$5,000-$50,000            0.018\u001B[4m9\u001B[24m   0.006\u001B[4m8\u001B[24m\u001B[4m7\u001B[24m     2.76  5.83\u001B[38;5;246me\u001B[39m\u001B[31m-  3\u001B[39m\n\u001B[38;5;250m 4\u001B[39m bailcat$50,000-$100,000          0.131    0.019\u001B[4m5\u001B[24m      6.72  1.87\u001B[38;5;246me\u001B[39m\u001B[31m- 11\u001B[39m\n\u001B[38;5;250m 5\u001B[39m bailcat$100,000-$250,000         0.180    0.045\u001B[4m1\u001B[24m      3.98  6.76\u001B[38;5;246me\u001B[39m\u001B[31m-  5\u001B[39m\n\u001B[38;5;250m 6\u001B[39m bailcat>$250,000                -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m0\u001B[39m\u001B[31m78\u001B[4m6\u001B[24m\u001B[39m   0.081\u001B[4m2\u001B[24m     -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m967\u001B[39m 3.33\u001B[38;5;246me\u001B[39m\u001B[31m-  1\u001B[39m\n",
        "\u001B[38;5;250m 7\u001B[39m after                           -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m353\u001B[39m    0.010\u001B[4m0\u001B[24m    -\u001B[31m35\u001B[39m\u001B[31m.\u001B[39m\u001B[31m2\u001B[39m   4.02\u001B[38;5;246me\u001B[39m\u001B[31m-271\u001B[39m\n\u001B[38;5;250m 8\u001B[39m bailcat<=$5,000:after            0.136    0.010\u001B[4m2\u001B[24m     13.3   2.39\u001B[38;5;246me\u001B[39m\u001B[31m- 40\u001B[39m\n\u001B[38;5;250m 9\u001B[39m bailcat$5,000-$50,000:after      0.299    0.011\u001B[4m4\u001B[24m     26.3   7.68\u001B[38;5;246me\u001B[39m\u001B[31m-152\u001B[39m\n\u001B[38;5;250m10\u001B[39m bailcat$50,000-$100,000:after    0.358    0.030\u001B[4m0\u001B[24m     11.9   1.01\u001B[38;5;246me\u001B[39m\u001B[31m- 32\u001B[39m\n",
        "\u001B[38;5;250m11\u001B[39m bailcat$100,000-$250,000:after   0.386    0.066\u001B[4m3\u001B[24m      5.83  5.65\u001B[38;5;246me\u001B[39m\u001B[31m-  9\u001B[39m\n\u001B[38;5;250m12\u001B[39m bailcat>$250,000:after           0.525    0.172       3.05  2.30\u001B[38;5;246me\u001B[39m\u001B[31m-  3\u001B[39m\n",
        "> ",
        "# Run a prior simulation",
        "> ",
        "plea_model <- stan_glm(plea ~ bailcat * after,",
        "+ ",
        "                       data = harris,",
        "+ ",
        "                       family = binomial,",
        "+ ",
        "                       prior_intercept = normal(0, 0.5),",
        "+ ",
        "                       prior = normal(0, 2.5, autoscale = TRUE), ",
        "+ ",
        "                       chains = 4, iter = 5000*2, seed = 84735,",
        "+ ",
        "                       prior_PD = TRUE)",
        "\nSAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 1).\nChain 1: \nChain 1: Gradient evaluation took 4.4e-05 seconds\nChain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.44 seconds.\nChain 1: Adjust your expectations accordingly!\nChain 1: \nChain 1: \nChain 1: Iteration:    1 / 10000 [  0%]  (Warmup)\nChain 1: Iteration: 1000 / 10000 [ 10%]  (Warmup)\nChain 1: Iteration: 2000 / 10000 [ 20%]  (Warmup)\nChain 1: Iteration: 3000 / 10000 [ 30%]  (Warmup)\nChain 1: Iteration: 4000 / 10000 [ 40%]  (Warmup)",
        "\nChain 1: Iteration: 5000 / 10000 [ 50%]  (Warmup)\nChain 1: Iteration: 5001 / 10000 [ 50%]  (Sampling)\nChain 1: Iteration: 6000 / 10000 [ 60%]  (Sampling)\nChain 1: Iteration: 7000 / 10000 [ 70%]  (Sampling)\nChain 1: Iteration: 8000 / 10000 [ 80%]  (Sampling)\nChain 1: Iteration: 9000 / 10000 [ 90%]  (Sampling)\nChain 1: Iteration: 10000 / 10000 [100%]  (Sampling)\nChain 1: \nChain 1:  Elapsed Time: 0.16 seconds (Warm-up)\nChain 1:                0.127 seconds (Sampling)\nChain 1:                0.287 seconds (Total)",
        "\nChain 1: \n\nSAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 2).\nChain 2: \nChain 2: Gradient evaluation took 6e-06 seconds\nChain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.06 seconds.\nChain 2: Adjust your expectations accordingly!\nChain 2: \nChain 2: \nChain 2: Iteration:    1 / 10000 [  0%]  (Warmup)\nChain 2: Iteration: 1000 / 10000 [ 10%]  (Warmup)\nChain 2: Iteration: 2000 / 10000 [ 20%]  (Warmup)\nChain 2: Iteration: 3000 / 10000 [ 30%]  (Warmup)\nChain 2: Iteration: 4000 / 10000 [ 40%]  (Warmup)",
        "\nChain 2: Iteration: 5000 / 10000 [ 50%]  (Warmup)\nChain 2: Iteration: 5001 / 10000 [ 50%]  (Sampling)\nChain 2: Iteration: 6000 / 10000 [ 60%]  (Sampling)\nChain 2: Iteration: 7000 / 10000 [ 70%]  (Sampling)\nChain 2: Iteration: 8000 / 10000 [ 80%]  (Sampling)\nChain 2: Iteration: 9000 / 10000 [ 90%]  (Sampling)\nChain 2: Iteration: 10000 / 10000 [100%]  (Sampling)\nChain 2: \nChain 2:  Elapsed Time: 0.131 seconds (Warm-up)\nChain 2:                0.155 seconds (Sampling)\nChain 2:                0.286 seconds (Total)",
        "\nChain 2: \n\nSAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 3).\nChain 3: \nChain 3: Gradient evaluation took 6e-06 seconds\nChain 3: 1000 transitions using 10 leapfrog steps per transition would take 0.06 seconds.\nChain 3: Adjust your expectations accordingly!\nChain 3: \nChain 3: \nChain 3: Iteration:    1 / 10000 [  0%]  (Warmup)\nChain 3: Iteration: 1000 / 10000 [ 10%]  (Warmup)\nChain 3: Iteration: 2000 / 10000 [ 20%]  (Warmup)\nChain 3: Iteration: 3000 / 10000 [ 30%]  (Warmup)\nChain 3: Iteration: 4000 / 10000 [ 40%]  (Warmup)",
        "\nChain 3: Iteration: 5000 / 10000 [ 50%]  (Warmup)\nChain 3: Iteration: 5001 / 10000 [ 50%]  (Sampling)\nChain 3: Iteration: 6000 / 10000 [ 60%]  (Sampling)\nChain 3: Iteration: 7000 / 10000 [ 70%]  (Sampling)\nChain 3: Iteration: 8000 / 10000 [ 80%]  (Sampling)\nChain 3: Iteration: 9000 / 10000 [ 90%]  (Sampling)\nChain 3: Iteration: 10000 / 10000 [100%]  (Sampling)\nChain 3: \nChain 3:  Elapsed Time: 0.137 seconds (Warm-up)\nChain 3:                0.132 seconds (Sampling)\nChain 3:                0.269 seconds (Total)",
        "\nChain 3: \n\nSAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 4).\nChain 4: \nChain 4: Gradient evaluation took 4e-06 seconds\nChain 4: 1000 transitions using 10 leapfrog steps per transition would take 0.04 seconds.\nChain 4: Adjust your expectations accordingly!\nChain 4: \nChain 4: \nChain 4: Iteration:    1 / 10000 [  0%]  (Warmup)\nChain 4: Iteration: 1000 / 10000 [ 10%]  (Warmup)\nChain 4: Iteration: 2000 / 10000 [ 20%]  (Warmup)\nChain 4: Iteration: 3000 / 10000 [ 30%]  (Warmup)\nChain 4: Iteration: 4000 / 10000 [ 40%]  (Warmup)",
        "\nChain 4: Iteration: 5000 / 10000 [ 50%]  (Warmup)\nChain 4: Iteration: 5001 / 10000 [ 50%]  (Sampling)\nChain 4: Iteration: 6000 / 10000 [ 60%]  (Sampling)\nChain 4: Iteration: 7000 / 10000 [ 70%]  (Sampling)\nChain 4: Iteration: 8000 / 10000 [ 80%]  (Sampling)\nChain 4: Iteration: 9000 / 10000 [ 90%]  (Sampling)\nChain 4: Iteration: 10000 / 10000 [100%]  (Sampling)\nChain 4: \nChain 4:  Elapsed Time: 0.126 seconds (Warm-up)\nChain 4:                0.151 seconds (Sampling)\nChain 4:                0.277 seconds (Total)",
        "\nChain 4: \n",
        "> ",
        "saveRDS(plea_model, \"plea_model.rds\")",
        "> ",
        "tidy(plea_model, effects = \"fixed\", conf.int = TRUE, conf.level = 0.80)",
        "\u001B[38;5;246m# A tibble: 12 × 5\u001B[39m\n   term                           estimate std.error conf.low conf.high\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                             \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m (Intercept)                     -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m147\u001B[39m       6.63    -\u001B[31m8\u001B[39m\u001B[31m.\u001B[39m\u001B[31m75\u001B[39m      8.51\n\u001B[38;5;250m 2\u001B[39m bailcat<=$5,000                  0.119       7.18    -\u001B[31m9\u001B[39m\u001B[31m.\u001B[39m\u001B[31m16\u001B[39m      9.29\n",
        "\u001B[38;5;250m 3\u001B[39m bailcat$5,000-$50,000            0.214       7.89   -\u001B[31m10\u001B[39m\u001B[31m.\u001B[39m\u001B[31m1\u001B[39m      10.2 \n\u001B[38;5;250m 4\u001B[39m bailcat$50,000-$100,000         -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m160\u001B[39m      42.6    -\u001B[31m54\u001B[39m\u001B[31m.\u001B[39m\u001B[31m6\u001B[39m      54.6 \n\u001B[38;5;250m 5\u001B[39m bailcat$100,000-$250,000         0.454      99.5   -\u001B[31m129\u001B[39m\u001B[31m.\u001B[39m      128.  \n\u001B[38;5;250m 6\u001B[39m bailcat>$250,000                 1.41      221.    -\u001B[31m285\u001B[39m\u001B[31m.\u001B[39m      282.  \n\u001B[38;5;250m 7\u001B[39m after                            0.029\u001B[4m2\u001B[24m      5.23    -\u001B[31m6\u001B[39m\u001B[31m.\u001B[39m\u001B[31m65\u001B[39m      6.83\n",
        "\u001B[38;5;250m 8\u001B[39m bailcat<=$5,000:after            0.136       5.46    -\u001B[31m6\u001B[39m\u001B[31m.\u001B[39m\u001B[31m97\u001B[39m      7.13\n\u001B[38;5;250m 9\u001B[39m bailcat$5,000-$50,000:after      0.029\u001B[4m5\u001B[24m     14.0    -\u001B[31m18\u001B[39m\u001B[31m.\u001B[39m\u001B[31m1\u001B[39m      17.9 \n\u001B[38;5;250m10\u001B[39m bailcat$50,000-$100,000:after    0.067\u001B[4m5\u001B[24m     65.2    -\u001B[31m84\u001B[39m\u001B[31m.\u001B[39m\u001B[31m4\u001B[39m      83.7 \n\u001B[38;5;250m11\u001B[39m bailcat$100,000-$250,000:after   0.266     149.    -\u001B[31m191\u001B[39m\u001B[31m.\u001B[39m      191.  \n\u001B[38;5;250m12\u001B[39m bailcat>$250,000:after           4.79      467.    -\u001B[31m579\u001B[39m\u001B[31m.\u001B[39m      587.  \n",
        "> ",
        "color_scheme_set(\"purple\")",
        "> ",
        "ppc_dens_overlay(y = harris$plea,",
        "+ ",
        "                 yrep = posterior_predict(plea_model, draws = 50))",
        "> ",
        "mini <- expand_grid(plea = c(0,1),",
        "+ ",
        "                    after = c(0,1))",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  epred_draws(newdata = mini,",
        "+ ",
        "              ndraws = 100) %>% ",
        "+ ",
        "  ggplot(aes(plea, .epred)) +",
        "+ ",
        "  stat_halfeye() +",
        "+ ",
        "  th_bail",
        "Error in eval(predvars, data, env) : object 'bailcat' not found\n",
        "> ",
        "View(plea_model)",
        "> ",
        "mini <- expand_grid(plea = c(0,1),",
        "+ ",
        "                    after = c(0,1),",
        "+ ",
        "                    bailcat = c(\"No bail\",",
        "+ ",
        "                                \"<=$5,000\",",
        "+ ",
        "                                \"$5,000-$50,000\",",
        "+ ",
        "                                \"$50,000-$100,000\",",
        "+ ",
        "                                \"$100,000-$250,000\",",
        "+ ",
        "                                \">$250,000\"))",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  epred_draws(newdata = mini,",
        "+ ",
        "              ndraws = 100) %>% ",
        "+ ",
        "  ggplot(aes(plea, .epred)) +",
        "+ ",
        "  stat_halfeye() +",
        "+ ",
        "  th_bail",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  epred_draws(newdata = mini,",
        "+ ",
        "              ndraws = 100) %>% ",
        "+ ",
        "  ggplot(aes(bailcat, .epred)) +",
        "+ ",
        "  stat_halfeye() +",
        "+ ",
        "  th_bail",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  epred_draws(newdata = mini,",
        "+ ",
        "              ndraws = 100) %>% ",
        "+ ",
        "  ggplot(aes(bailcat, .epred, fill = bailcat)) +",
        "+ ",
        "  stat_halfeye() +",
        "+ ",
        "  th_bail",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  epred_draws(newdata = mini,",
        "+ ",
        "              ndraws = 100) %>% ",
        "+ ",
        "  ggplot(aes(.epred, bailcat, fill = bailcat)) +",
        "+ ",
        "  stat_halfeye() +",
        "+ ",
        "  th_bail",
        "> ",
        "mini <- expand_grid(plea = c(0,1),",
        "+ ",
        "                    after = c(0,1),",
        "+ ",
        "                    bailcat = factor(c(\"No bail\",",
        "+ ",
        "                                       \"<=$5,000\",",
        "+ ",
        "                                       \"$5,000-$50,000\",",
        "+ ",
        "                                       \"$50,000-$100,000\",",
        "+ ",
        "                                       \"$100,000-$250,000\",",
        "+ ",
        "                                       \">$250,000\"),",
        "+ ",
        "                                     levels = c(\"No bail\",",
        "+ ",
        "                                                \"<=$5,000\",",
        "+ ",
        "                                                \"$5,000-$50,000\",",
        "+ ",
        "                                                \"$50,000-$100,000\",",
        "+ ",
        "                                                \"$100,000-$250,000\",",
        "+ ",
        "                                                \">$250,000\")))",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  epred_draws(newdata = mini,",
        "+ ",
        "              ndraws = 100) %>% ",
        "+ ",
        "  ggplot(aes(.epred, bailcat, fill = bailcat)) +",
        "+ ",
        "  stat_halfeye() +",
        "+ ",
        "  th_bail",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  gather_draws() %>% ",
        "+ ",
        "  ggplot(aes(.value, .variable)) +",
        "+ ",
        "  stat_halfeye(.width = c(0.8, 0.95), ",
        "+ ",
        "               aes(fill = .variable), ",
        "+ ",
        "               alpha = .85) +",
        "+ ",
        "",
        "+ ",
        "```",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  gather_draws() %>% ",
        "+ ",
        "  ggplot(aes(.value, .variable)) +",
        "+ ",
        "  stat_halfeye(.width = c(0.8, 0.95), ",
        "+ ",
        "               aes(fill = .variable), ",
        "+ ",
        "               alpha = .85)",
        "\u001B[1m\u001B[33mError\u001B[39m in `layer_slabinterval()`:\u001B[22m\n\u001B[38;5;254m\u001B[33m!\u001B[38;5;254m Problem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;254m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error in `FUN()`:\u001B[22m\n\u001B[33m!\u001B[39m object '.variable' not found\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  gather_draws() #%>% ",
        "\u001B[38;5;246m# A tibble: 0 × 0\u001B[39m\n",
        "> ",
        "plea_model #%>% ",
        "stan_glm\n family:       binomial [logit]\n formula:      plea ~ bailcat * after\n observations: 342873\n predictors:   12\n------\n                               Median MAD_SD\n(Intercept)                     -0.1    6.6 \nbailcat<=$5,000                  0.1    7.2 \nbailcat$5,000-$50,000            0.2    7.9 \nbailcat$50,000-$100,000         -0.2   42.6 \nbailcat$100,000-$250,000         0.5   99.5 \nbailcat>$250,000                 1.4  220.7 \nafter                            0.0    5.2 \nbailcat<=$5,000:after         ",
        "   0.1    5.5 \nbailcat$5,000-$50,000:after      0.0   14.0 \nbailcat$50,000-$100,000:after    0.1   65.2 \nbailcat$100,000-$250,000:after   0.3  148.6 \nbailcat>$250,000:after           4.8  466.7 \n\n------\n* For help interpreting the printed output see ?print.stanreg\n* For info on the priors used see ?prior_summary.stanreg\n",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  gather_draws(bailcat, after) %>% ",
        "+ ",
        "  ggplot(aes(.value, .variable)) +",
        "+ ",
        "  stat_halfeye(.width = c(0.8, 0.95), ",
        "+ ",
        "               aes(fill = .variable), ",
        "+ ",
        "               alpha = .85)",
        "Error: No variables found matching spec: bailcat\n",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  gather_draws(`bailcat<=$5,000`, `bailcat$5,000-$50,000`) %>% ",
        "+ ",
        "  ggplot(aes(.value, .variable)) +",
        "+ ",
        "  stat_halfeye(.width = c(0.8, 0.95), ",
        "+ ",
        "               aes(fill = .variable), ",
        "+ ",
        "               alpha = .85)",
        "Error: No variables found matching spec: bailcat\\<\\=\\$5\\,000\n",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  gather_draws(`<=$5,000`, `$5,000-$50,000`) %>% ",
        "+ ",
        "  ggplot(aes(.value, .variable)) +",
        "+ ",
        "  stat_halfeye(.width = c(0.8, 0.95), ",
        "+ ",
        "               aes(fill = .variable), ",
        "+ ",
        "               alpha = .85)",
        "Error: No variables found matching spec: \\<\\=\\$5\\,000\n",
        "> ",
        "tidy(plea_model)",
        "\u001B[38;5;246m# A tibble: 12 × 3\u001B[39m\n   term                           estimate std.error\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                             \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m (Intercept)                     -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m147\u001B[39m       6.63\n\u001B[38;5;250m 2\u001B[39m bailcat<=$5,000                  0.119       7.18\n\u001B[38;5;250m 3\u001B[39m bailcat$5,000-$50,000            0.214       7.89\n\u001B[38;5;250m 4\u001B[39m bailcat$50,000-$100,000         -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m160\u001B[39m      42.6 \n",
        "\u001B[38;5;250m 5\u001B[39m bailcat$100,000-$250,000         0.454      99.5 \n\u001B[38;5;250m 6\u001B[39m bailcat>$250,000                 1.41      221.  \n\u001B[38;5;250m 7\u001B[39m after                            0.029\u001B[4m2\u001B[24m      5.23\n\u001B[38;5;250m 8\u001B[39m bailcat<=$5,000:after            0.136       5.46\n\u001B[38;5;250m 9\u001B[39m bailcat$5,000-$50,000:after      0.029\u001B[4m5\u001B[24m     14.0 \n\u001B[38;5;250m10\u001B[39m bailcat$50,000-$100,000:after    0.067\u001B[4m5\u001B[24m     65.2 \n\u001B[38;5;250m11\u001B[39m bailcat$100,000-$250,000:after   0.266     149.  \n\u001B[38;5;250m12\u001B[39m bailcat>$250,000:after           4.79      467.  \n",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  spread_draws() %>% ",
        "+ ",
        "  ggplot(aes(.value, .variable)) +",
        "+ ",
        "  stat_halfeye(.width = c(0.8, 0.95), ",
        "+ ",
        "               aes(fill = .variable), ",
        "+ ",
        "               alpha = .85)",
        "Error in UseMethod(\"tbl_vars\") : \n  no applicable method for 'tbl_vars' applied to an object of class \"NULL\"\n",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  spread_draws(bailcat, after) %>% ",
        "+ ",
        "  ggplot(aes(.value, .variable)) +",
        "+ ",
        "  stat_halfeye(.width = c(0.8, 0.95), ",
        "+ ",
        "               aes(fill = .variable), ",
        "+ ",
        "               alpha = .85)",
        "Error: No variables found matching spec: bailcat\n",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  spread_draws(after) %>% ",
        "+ ",
        "  ggplot(aes(.value, .variable)) +",
        "+ ",
        "  stat_halfeye(.width = c(0.8, 0.95), ",
        "+ ",
        "               aes(fill = .variable), ",
        "+ ",
        "               alpha = .85)",
        "\u001B[1m\u001B[33mError\u001B[39m in `layer_slabinterval()`:\u001B[22m\n\u001B[38;5;254m\u001B[33m!\u001B[38;5;254m Problem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;254m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error in `FUN()`:\u001B[22m\n\u001B[33m!\u001B[39m object '.variable' not found\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  gather_draws(after) %>% ",
        "+ ",
        "  ggplot(aes(.value, .variable)) +",
        "+ ",
        "  stat_halfeye(.width = c(0.8, 0.95), ",
        "+ ",
        "               aes(fill = .variable), ",
        "+ ",
        "               alpha = .85)",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  gather_draws(after) %>% ",
        "+ ",
        "  ggplot(aes(.value, .variable)) +",
        "+ ",
        "  stat_halfeye(.width = c(0.8, 0.95), ",
        "+ ",
        "               aes(fill = .variable), ",
        "+ ",
        "               alpha = .85) +",
        "+ ",
        "  th_bail",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  gather_draws(factor(bailcat), after) %>% ",
        "+ ",
        "  ggplot(aes(.value, .variable)) +",
        "+ ",
        "  stat_halfeye(.width = c(0.8, 0.95), ",
        "+ ",
        "               aes(fill = .variable), ",
        "+ ",
        "               alpha = .85) +",
        "+ ",
        "  th_bail",
        "Error in order(y) : unimplemented type 'list' in 'orderVector1'\n",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  gather_draws(factor(bailcat), after) %>% ",
        "+ ",
        "  ggplot(aes(.value, .variable)) +",
        "+ ",
        "  stat_halfeye(.width = c(0.8, 0.95), ",
        "+ ",
        "               aes(fill = .variable), ",
        "+ ",
        "               alpha = .85) +",
        "+ ",
        "  th_bail",
        "Error in order(y) : unimplemented type 'list' in 'orderVector1'\n",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  gather_draws(bailcat, after) %>% ",
        "+ ",
        "  ggplot(aes(.value, .variable)) +",
        "+ ",
        "  stat_halfeye(.width = c(0.8, 0.95), ",
        "+ ",
        "               aes(fill = .variable), ",
        "+ ",
        "               alpha = .85) +",
        "+ ",
        "  th_bail",
        "Error: No variables found matching spec: bailcat\n",
        "> ",
        "tidy(plea_model)",
        "\u001B[38;5;246m# A tibble: 12 × 3\u001B[39m\n   term                           estimate std.error\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                             \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m (Intercept)                     -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m147\u001B[39m       6.63\n\u001B[38;5;250m 2\u001B[39m bailcat<=$5,000                  0.119       7.18\n\u001B[38;5;250m 3\u001B[39m bailcat$5,000-$50,000            0.214       7.89\n\u001B[38;5;250m 4\u001B[39m bailcat$50,000-$100,000         -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m160\u001B[39m      42.6 \n",
        "\u001B[38;5;250m 5\u001B[39m bailcat$100,000-$250,000         0.454      99.5 \n\u001B[38;5;250m 6\u001B[39m bailcat>$250,000                 1.41      221.  \n\u001B[38;5;250m 7\u001B[39m after                            0.029\u001B[4m2\u001B[24m      5.23\n\u001B[38;5;250m 8\u001B[39m bailcat<=$5,000:after            0.136       5.46\n\u001B[38;5;250m 9\u001B[39m bailcat$5,000-$50,000:after      0.029\u001B[4m5\u001B[24m     14.0 \n\u001B[38;5;250m10\u001B[39m bailcat$50,000-$100,000:after    0.067\u001B[4m5\u001B[24m     65.2 \n\u001B[38;5;250m11\u001B[39m bailcat$100,000-$250,000:after   0.266     149.  \n\u001B[38;5;250m12\u001B[39m bailcat>$250,000:after           4.79      467.  \n",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  gather_draws(`bailcat<=$5,000`, after) %>% ",
        "+ ",
        "  ggplot(aes(.value, .variable)) +",
        "+ ",
        "  stat_halfeye(.width = c(0.8, 0.95), ",
        "+ ",
        "               aes(fill = .variable), ",
        "+ ",
        "               alpha = .85) +",
        "+ ",
        "  th_bail",
        "Error: No variables found matching spec: bailcat\\<\\=\\$5\\,000\n",
        "> ",
        "harris <- harris_m %>% ",
        "+ ",
        "  filter(drop == FALSE,",
        "+ ",
        "         bailcat != \"Bond Denied\") %>% ",
        "+ ",
        "  mutate(bailcat_num = as.numeric(bailcat))",
        "> ",
        "View(harris)",
        "> ",
        "# Run a prior simulation",
        "> ",
        "plea_model <- stan_glm(plea ~ bailcat_num * after,",
        "+ ",
        "                       data = harris,",
        "+ ",
        "                       family = binomial,",
        "+ ",
        "                       prior_intercept = normal(0, 0.5),",
        "+ ",
        "                       prior = normal(0, 2.5, autoscale = TRUE), ",
        "+ ",
        "                       chains = 4, iter = 5000*2, seed = 84735,",
        "+ ",
        "                       prior_PD = TRUE)",
        "\nSAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 1).\nChain 1: \nChain 1: Gradient evaluation took 9e-06 seconds\nChain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.09 seconds.\nChain 1: Adjust your expectations accordingly!\nChain 1: \nChain 1: \nChain 1: Iteration:    1 / 10000 [  0%]  (Warmup)\nChain 1: Iteration: 1000 / 10000 [ 10%]  (Warmup)\nChain 1: Iteration: 2000 / 10000 [ 20%]  (Warmup)\nChain 1: Iteration: 3000 / 10000 [ 30%]  (Warmup)\nChain 1: Iteration: 4000 / 10000 [ 40%]  (Warmup)\n",
        "Chain 1: Iteration: 5000 / 10000 [ 50%]  (Warmup)\nChain 1: Iteration: 5001 / 10000 [ 50%]  (Sampling)\nChain 1: Iteration: 6000 / 10000 [ 60%]  (Sampling)\nChain 1: Iteration: 7000 / 10000 [ 70%]  (Sampling)\nChain 1: Iteration: 8000 / 10000 [ 80%]  (Sampling)\nChain 1: Iteration: 9000 / 10000 [ 90%]  (Sampling)\nChain 1: Iteration: 10000 / 10000 [100%]  (Sampling)\nChain 1: \nChain 1:  Elapsed Time: 0.137 seconds (Warm-up)\nChain 1:                0.134 seconds (Sampling)\nChain 1:                0.271 seconds (Total)",
        "\nChain 1: \n\nSAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 2).\nChain 2: \nChain 2: Gradient evaluation took 6e-06 seconds\nChain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.06 seconds.\nChain 2: Adjust your expectations accordingly!\nChain 2: \nChain 2: \nChain 2: Iteration:    1 / 10000 [  0%]  (Warmup)\nChain 2: Iteration: 1000 / 10000 [ 10%]  (Warmup)\nChain 2: Iteration: 2000 / 10000 [ 20%]  (Warmup)\nChain 2: Iteration: 3000 / 10000 [ 30%]  (Warmup)\nChain 2: Iteration: 4000 / 10000 [ 40%]  (Warmup)",
        "\nChain 2: Iteration: 5000 / 10000 [ 50%]  (Warmup)\nChain 2: Iteration: 5001 / 10000 [ 50%]  (Sampling)\nChain 2: Iteration: 6000 / 10000 [ 60%]  (Sampling)\nChain 2: Iteration: 7000 / 10000 [ 70%]  (Sampling)\nChain 2: Iteration: 8000 / 10000 [ 80%]  (Sampling)\nChain 2: Iteration: 9000 / 10000 [ 90%]  (Sampling)\nChain 2: Iteration: 10000 / 10000 [100%]  (Sampling)\nChain 2: \nChain 2:  Elapsed Time: 0.13 seconds (Warm-up)\nChain 2:                0.137 seconds (Sampling)\nChain 2:                0.267 seconds (Total)",
        "\nChain 2: \n\nSAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 3).\nChain 3: \nChain 3: Gradient evaluation took 4e-06 seconds\nChain 3: 1000 transitions using 10 leapfrog steps per transition would take 0.04 seconds.\nChain 3: Adjust your expectations accordingly!\nChain 3: \nChain 3: \nChain 3: Iteration:    1 / 10000 [  0%]  (Warmup)\nChain 3: Iteration: 1000 / 10000 [ 10%]  (Warmup)\nChain 3: Iteration: 2000 / 10000 [ 20%]  (Warmup)\nChain 3: Iteration: 3000 / 10000 [ 30%]  (Warmup)\nChain 3: Iteration: 4000 / 10000 [ 40%]  (Warmup)",
        "\nChain 3: Iteration: 5000 / 10000 [ 50%]  (Warmup)\nChain 3: Iteration: 5001 / 10000 [ 50%]  (Sampling)\nChain 3: Iteration: 6000 / 10000 [ 60%]  (Sampling)\nChain 3: Iteration: 7000 / 10000 [ 70%]  (Sampling)\nChain 3: Iteration: 8000 / 10000 [ 80%]  (Sampling)\nChain 3: Iteration: 9000 / 10000 [ 90%]  (Sampling)\nChain 3: Iteration: 10000 / 10000 [100%]  (Sampling)\nChain 3: \nChain 3:  Elapsed Time: 0.106 seconds (Warm-up)\nChain 3:                0.143 seconds (Sampling)\nChain 3:                0.249 seconds (Total)",
        "\nChain 3: \n\nSAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 4).\nChain 4: \nChain 4: Gradient evaluation took 6e-06 seconds\nChain 4: 1000 transitions using 10 leapfrog steps per transition would take 0.06 seconds.\nChain 4: Adjust your expectations accordingly!\nChain 4: \nChain 4: \nChain 4: Iteration:    1 / 10000 [  0%]  (Warmup)\nChain 4: Iteration: 1000 / 10000 [ 10%]  (Warmup)\nChain 4: Iteration: 2000 / 10000 [ 20%]  (Warmup)\nChain 4: Iteration: 3000 / 10000 [ 30%]  (Warmup)\nChain 4: Iteration: 4000 / 10000 [ 40%]  (Warmup)",
        "\nChain 4: Iteration: 5000 / 10000 [ 50%]  (Warmup)\nChain 4: Iteration: 5001 / 10000 [ 50%]  (Sampling)\nChain 4: Iteration: 6000 / 10000 [ 60%]  (Sampling)\nChain 4: Iteration: 7000 / 10000 [ 70%]  (Sampling)\nChain 4: Iteration: 8000 / 10000 [ 80%]  (Sampling)\nChain 4: Iteration: 9000 / 10000 [ 90%]  (Sampling)\nChain 4: Iteration: 10000 / 10000 [100%]  (Sampling)\nChain 4: \nChain 4:  Elapsed Time: 0.139 seconds (Warm-up)\nChain 4:                0.153 seconds (Sampling)\nChain 4:                0.292 seconds (Total)",
        "\nChain 4: \n",
        "> ",
        "saveRDS(plea_model, \"plea_model.rds\")",
        "> ",
        "tidy(plea_model, effects = \"fixed\", conf.int = TRUE, conf.level = 0.80)",
        "\u001B[38;5;246m# A tibble: 4 × 5\u001B[39m\n  term              estimate std.error conf.low conf.high\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m (Intercept)        -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m465\u001B[39m      19.9    -\u001B[31m25\u001B[39m\u001B[31m.\u001B[39m\u001B[31m9\u001B[39m      24.7 \n\u001B[38;5;250m2\u001B[39m bailcat_num         0.122       6.36    -\u001B[31m7\u001B[39m\u001B[31m.\u001B[39m\u001B[31m96\u001B[39m      8.35\n",
        "\u001B[38;5;250m3\u001B[39m after               0.030\u001B[4m1\u001B[24m      5.32    -\u001B[31m6\u001B[39m\u001B[31m.\u001B[39m\u001B[31m85\u001B[39m      6.80\n\u001B[38;5;250m4\u001B[39m bailcat_num:after   0.011\u001B[4m7\u001B[24m      1.68    -\u001B[31m2\u001B[39m\u001B[31m.\u001B[39m\u001B[31m17\u001B[39m      2.19\n",
        "> ",
        "plea_model %>% ",
        "+ ",
        "  gather_draws(bailcat_num, after) %>% ",
        "+ ",
        "  ggplot(aes(.value, .variable)) +",
        "+ ",
        "  stat_halfeye(.width = c(0.8, 0.95), ",
        "+ ",
        "               aes(fill = .variable), ",
        "+ ",
        "               alpha = .85) +",
        "+ ",
        "  th_bail",
        "> ",
        "model <- lm(plea ~ bailcat * after, data = harris)",
        "> ",
        "tidy(model)",
        "\u001B[38;5;246m# A tibble: 12 × 5\u001B[39m\n   term                           estimate std.error statistic   p.value\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                             \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m (Intercept)                      0.707    0.006\u001B[4m2\u001B[24m\u001B[4m0\u001B[24m   114.    0   \u001B[38;5;246m \u001B[39m    \n\u001B[38;5;250m 2\u001B[39m bailcat<=$5,000                 -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m212\u001B[39m    0.006\u001B[4m2\u001B[24m\u001B[4m9\u001B[24m   -\u001B[31m33\u001B[39m\u001B[31m.\u001B[39m\u001B[31m8\u001B[39m   1.58\u001B[38;5;246me\u001B[39m\u001B[31m-249\u001B[39m\n",
        "\u001B[38;5;250m 3\u001B[39m bailcat$5,000-$50,000            0.018\u001B[4m9\u001B[24m   0.006\u001B[4m8\u001B[24m\u001B[4m7\u001B[24m     2.76  5.83\u001B[38;5;246me\u001B[39m\u001B[31m-  3\u001B[39m\n\u001B[38;5;250m 4\u001B[39m bailcat$50,000-$100,000          0.131    0.019\u001B[4m5\u001B[24m      6.72  1.87\u001B[38;5;246me\u001B[39m\u001B[31m- 11\u001B[39m\n\u001B[38;5;250m 5\u001B[39m bailcat$100,000-$250,000         0.180    0.045\u001B[4m1\u001B[24m      3.98  6.76\u001B[38;5;246me\u001B[39m\u001B[31m-  5\u001B[39m\n\u001B[38;5;250m 6\u001B[39m bailcat>$250,000                -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m0\u001B[39m\u001B[31m78\u001B[4m6\u001B[24m\u001B[39m   0.081\u001B[4m2\u001B[24m     -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m967\u001B[39m 3.33\u001B[38;5;246me\u001B[39m\u001B[31m-  1\u001B[39m\n",
        "\u001B[38;5;250m 7\u001B[39m after                           -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m353\u001B[39m    0.010\u001B[4m0\u001B[24m    -\u001B[31m35\u001B[39m\u001B[31m.\u001B[39m\u001B[31m2\u001B[39m   4.02\u001B[38;5;246me\u001B[39m\u001B[31m-271\u001B[39m\n\u001B[38;5;250m 8\u001B[39m bailcat<=$5,000:after            0.136    0.010\u001B[4m2\u001B[24m     13.3   2.39\u001B[38;5;246me\u001B[39m\u001B[31m- 40\u001B[39m\n\u001B[38;5;250m 9\u001B[39m bailcat$5,000-$50,000:after      0.299    0.011\u001B[4m4\u001B[24m     26.3   7.68\u001B[38;5;246me\u001B[39m\u001B[31m-152\u001B[39m\n\u001B[38;5;250m10\u001B[39m bailcat$50,000-$100,000:after    0.358    0.030\u001B[4m0\u001B[24m     11.9   1.01\u001B[38;5;246me\u001B[39m\u001B[31m- 32\u001B[39m\n",
        "\u001B[38;5;250m11\u001B[39m bailcat$100,000-$250,000:after   0.386    0.066\u001B[4m3\u001B[24m      5.83  5.65\u001B[38;5;246me\u001B[39m\u001B[31m-  9\u001B[39m\n\u001B[38;5;250m12\u001B[39m bailcat>$250,000:after           0.525    0.172       3.05  2.30\u001B[38;5;246me\u001B[39m\u001B[31m-  3\u001B[39m\n",
        "> ",
        "glance(model)",
        "\u001B[38;5;246m# A tibble: 1 × 12\u001B[39m\n  r.squared adj.r.squared sigma statistic p.value    df   logLik     AIC     BIC deviance df.residual   nobs\n      \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m         \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m       \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m\n",
        "\u001B[38;5;250m1\u001B[39m    0.075\u001B[4m6\u001B[24m        0.075\u001B[4m6\u001B[24m 0.479     \u001B[4m2\u001B[24m550.       0    11 -\u001B[31m\u001B[4m2\u001B[24m\u001B[4m3\u001B[24m\u001B[4m4\u001B[24m\u001B[39m\u001B[31m324\u001B[39m\u001B[31m.\u001B[39m \u001B[4m4\u001B[24m\u001B[4m6\u001B[24m\u001B[4m8\u001B[24m673. \u001B[4m4\u001B[24m\u001B[4m6\u001B[24m\u001B[4m8\u001B[24m813.   \u001B[4m7\u001B[24m\u001B[4m8\u001B[24m752.      \u001B[4m3\u001B[24m\u001B[4m4\u001B[24m\u001B[4m2\u001B[24m861 \u001B[4m3\u001B[24m\u001B[4m4\u001B[24m\u001B[4m2\u001B[24m873\n",
        "> ",
        "model <- lm(plea ~ bailcat * after + race, data = harris)",
        "> ",
        "tidy(model)",
        "\u001B[38;5;246m# A tibble: 14 × 5\u001B[39m\n   term                           estimate std.error statistic   p.value\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                             \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m (Intercept)                      0.720    0.006\u001B[4m2\u001B[24m\u001B[4m4\u001B[24m    115.   0   \u001B[38;5;246m \u001B[39m    \n\u001B[38;5;250m 2\u001B[39m bailcat<=$5,000                 -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m213\u001B[39m    0.006\u001B[4m2\u001B[24m\u001B[4m8\u001B[24m    -\u001B[31m33\u001B[39m\u001B[31m.\u001B[39m\u001B[31m9\u001B[39m  6.76\u001B[38;5;246me\u001B[39m\u001B[31m-251\u001B[39m\n",
        "\u001B[38;5;250m 3\u001B[39m bailcat$5,000-$50,000            0.017\u001B[4m4\u001B[24m   0.006\u001B[4m8\u001B[24m\u001B[4m5\u001B[24m      2.53 1.13\u001B[38;5;246me\u001B[39m\u001B[31m-  2\u001B[39m\n\u001B[38;5;250m 4\u001B[39m bailcat$50,000-$100,000          0.130    0.019\u001B[4m5\u001B[24m       6.67 2.58\u001B[38;5;246me\u001B[39m\u001B[31m- 11\u001B[39m\n\u001B[38;5;250m 5\u001B[39m bailcat$100,000-$250,000         0.179    0.045\u001B[4m0\u001B[24m       3.97 7.11\u001B[38;5;246me\u001B[39m\u001B[31m-  5\u001B[39m\n\u001B[38;5;250m 6\u001B[39m bailcat>$250,000                -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m0\u001B[39m\u001B[31m84\u001B[4m0\u001B[24m\u001B[39m   0.081\u001B[4m1\u001B[24m      -\u001B[31m1\u001B[39m\u001B[31m.\u001B[39m\u001B[31m0\u001B[39m\u001B[31m4\u001B[39m 3.00\u001B[38;5;246me\u001B[39m\u001B[31m-  1\u001B[39m\n",
        "\u001B[38;5;250m 7\u001B[39m after                           -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m353\u001B[39m    0.010\u001B[4m0\u001B[24m     -\u001B[31m35\u001B[39m\u001B[31m.\u001B[39m\u001B[31m2\u001B[39m  2.65\u001B[38;5;246me\u001B[39m\u001B[31m-271\u001B[39m\n\u001B[38;5;250m 8\u001B[39m raceBlack                       -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m0\u001B[39m\u001B[31m16\u001B[4m5\u001B[24m\u001B[39m   0.001\u001B[4m6\u001B[24m\u001B[4m9\u001B[24m     -\u001B[31m9\u001B[39m\u001B[31m.\u001B[39m\u001B[31m78\u001B[39m 1.43\u001B[38;5;246me\u001B[39m\u001B[31m- 22\u001B[39m\n\u001B[38;5;250m 9\u001B[39m raceOther                       -\u001B[31m0\u001B[39m\u001B[31m.\u001B[39m\u001B[31m149\u001B[39m    0.004\u001B[4m4\u001B[24m\u001B[4m1\u001B[24m    -\u001B[31m33\u001B[39m\u001B[31m.\u001B[39m\u001B[31m8\u001B[39m  2.15\u001B[38;5;246me\u001B[39m\u001B[31m-250\u001B[39m\n",
        "\u001B[38;5;250m10\u001B[39m bailcat<=$5,000:after            0.135    0.010\u001B[4m2\u001B[24m      13.3  2.46\u001B[38;5;246me\u001B[39m\u001B[31m- 40\u001B[39m\n\u001B[38;5;250m11\u001B[39m bailcat$5,000-$50,000:after      0.299    0.011\u001B[4m4\u001B[24m      26.3  1.96\u001B[38;5;246me\u001B[39m\u001B[31m-152\u001B[39m\n\u001B[38;5;250m12\u001B[39m bailcat$50,000-$100,000:after    0.357    0.030\u001B[4m0\u001B[24m      11.9  8.61\u001B[38;5;246me\u001B[39m\u001B[31m- 33\u001B[39m\n\u001B[38;5;250m13\u001B[39m bailcat$100,000-$250,000:after   0.385    0.066\u001B[4m2\u001B[24m       5.81 6.22\u001B[38;5;246me\u001B[39m\u001B[31m-  9\u001B[39m\n\u001B[38;5;250m14\u001B[39m bailcat>$250,000:after           0.525    0.172        3.06 2.23\u001B[38;5;246me\u001B[39m\u001B[31m-  3\u001B[39m\n",
        "> ",
        "model <- lm(plea ~ bailcat * after + age, data = harris)",
        "Error in eval(predvars, data, env) : object 'age' not found\n",
        "\nRestarting R session...\n\n"
    ]
}