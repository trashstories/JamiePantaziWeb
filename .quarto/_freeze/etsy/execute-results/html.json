{
  "hash": "2987303a7023935e03bba606b43eed22",
  "result": {
    "markdown": "---\ntitle: \"Untitled\"\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyverse' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tibble' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dplyr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'forcats' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'lubridate' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(randomNames)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'randomNames' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nadds <- read_csv(\"address.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 50 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): NAME, SINGLELINE, ADDRESS, CITY, STATE, TYPE\ndbl (3): OID_, ZIP, SALES\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nex = 50\n\nnames <- tibble(name = randomNames(ex, which.names = \"first\",\n                                   ethnicity = c(1,2,9,8,29,1),\n                                   return.complete.data = TRUE))\nnames_ <- names %>% \n  mutate(gender = ifelse(name$gender == 0, \"Male\", \"Female\")) %>% \n  mutate(name = name$first_name) %>% \n  mutate(address = adds$SINGLELINE) %>% \n  mutate(name2 = randomNames(ex, which.names = \"first\",\n                             ethnicity = c(1,2,9,8,29,1)),\n         couple = paste0(name, \" + \", name2)) %>% \n  select(name, couple, address)\n\ncouples <- names_ %>% \n  select(couple, address) %>% \n  head(7)\n\nfriends <- names_ %>% \n  select(name, address) %>% \n  head(7)\n\nwrite_csv(names_, \"names.csv\")\nwrite_csv(couples, \"couples.csv\")\nwrite_csv(friends, \"friends.csv\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}